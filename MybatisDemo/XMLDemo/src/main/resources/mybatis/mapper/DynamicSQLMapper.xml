<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mhz.mybatis.demo.mapper.DynamicSQLMapper">

    <select id="ifTag" resultType="com.mhz.mybatis.demo.model.Product">
        select * from product_
--      如果 test == true 则拼接SQL
        <if test="name!=null">
            where name like concat('%',#{name},'%')
        </if>
    </select>


    <select id="whereTag" resultType="com.mhz.mybatis.demo.model.Product" parameterType="com.mhz.mybatis.demo.model.Product">
        select * from product_
--      where标签其实就是用来解决使用SQL时where 1=1 的问题
        <where>
            <if test="name!=null">
                and name like concat('%',#{name},'%')
            </if>
            <if test="price!=null and price!=0">
                and price > #{price}
            </if>
        </where>
    </select>

    <select id="trimWhereTag" resultType="com.mhz.mybatis.demo.model.Product" parameterType="com.mhz.mybatis.demo.model.Product">
        select * from product_
--         定制标签 prefix前缀 prefixOverrides判断后面的替换符
        <trim prefix="WHERE" prefixOverrides="AND |OR ">
            <if test="name!=null">
                and name like concat('%',#{name},'%')
            </if>
            <if test="price!=null and price!=0">
                and price > #{price}
            </if>
        </trim>
    </select>


    <update id="setTag" parameterType="com.mhz.mybatis.demo.model.Product">
        update product_
--         同where功能基本一致
        <set>
            <if test="name != null">`name`=#{name},</if>
            <if test="price != null">price=#{price},</if>
        </set> where id=#{id}
    </update>

    <update id="trimSetTag" parameterType="com.mhz.mybatis.demo.model.Product">
        update product_
--         定制标签 prefix前缀 suffixOverrides判断后面的替换符
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null">`name`=#{name},</if>
            <if test="price != null">price=#{price},</if>
        </trim> where id=#{id}
    </update>


    <select id="chooseTag"  resultType="com.mhz.mybatis.demo.model.Product" parameterType="com.mhz.mybatis.demo.model.Product">
--         与JAVA里面的switch句法类似 if else 在这里携程 when otherwise的形式
        SELECT * FROM product_
        <where>
            <choose>
                <when test="name != null">
                    and name like concat('%',#{name},'%')
                </when>
                <when test="price !=null and price != 0">
                    and price > #{price}
                </when>
                <otherwise>
                    and id >1
                </otherwise>
            </choose>
        </where>
    </select>

    <select id="foreachTag"  resultType="com.mhz.mybatis.demo.model.Product" parameterType="ArrayList">
    SELECT * FROM product_
    WHERE ID in
--      open
--      for(Object id : Object ids){
--          id+separator...
--      }
--     end
    <foreach item="id" index="index" collection="ids"
             open="(" separator="," close=")">
        #{id}
    </foreach>
    </select>

    <select id="bindTag" resultType="com.mhz.mybatis.demo.model.Product">

<!--    本来的模糊查询方式 -->
<!--    select * from   product_  where name like concat('%',#{0},'%') -->
        <bind name="likename" value="'%' + name + '%'" />
        select * from   product_  where name like #{likename}
    </select>
</mapper>